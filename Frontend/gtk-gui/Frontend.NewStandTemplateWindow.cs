
// This file has been generated by the GUI designer. Do not modify.
namespace Frontend
{
	public partial class NewStandTemplateWindow
	{
		private global::Gtk.Table MainTable;
		
		private global::Gtk.Button cancelBtn;
		
		private global::Gtk.Button drawStandShapeBtn;
		
		private global::Gtk.Label entryLabel;
		
		private global::Gtk.Entry heightEntry;
		
		private global::Gtk.Label heightLabel;
		
		private global::Gtk.Entry nameEntry;
		
		private global::Gtk.Button okButton;
		
		private global::Gtk.ColorButton standColorButton;
		
		private global::Gtk.Entry widthEntry;
		
		private global::Gtk.Label widthLabel;

		protected virtual void Build ()
		{
			global::Stetic.Gui.Initialize (this);
			// Widget Frontend.NewStandTemplateWindow
			this.WidthRequest = 300;
			this.HeightRequest = 200;
			this.Name = "Frontend.NewStandTemplateWindow";
			this.Title = global::Mono.Unix.Catalog.GetString ("Create New Stand");
			this.Icon = global::Gdk.Pixbuf.LoadFromResource ("Frontend.Assets.icon.ico");
			this.WindowPosition = ((global::Gtk.WindowPosition)(4));
			this.Modal = true;
			this.Resizable = false;
			// Container child Frontend.NewStandTemplateWindow.Gtk.Container+ContainerChild
			this.MainTable = new global::Gtk.Table (((uint)(6)), ((uint)(2)), false);
			this.MainTable.Name = "MainTable";
			this.MainTable.RowSpacing = ((uint)(6));
			this.MainTable.ColumnSpacing = ((uint)(6));
			// Container child MainTable.Gtk.Table+TableChild
			this.cancelBtn = new global::Gtk.Button ();
			this.cancelBtn.CanFocus = true;
			this.cancelBtn.Name = "cancelBtn";
			this.cancelBtn.UseUnderline = true;
			this.cancelBtn.Label = global::Mono.Unix.Catalog.GetString ("_Cancel");
			global::Gtk.Image w1 = new global::Gtk.Image ();
			w1.Pixbuf = global::Stetic.IconLoader.LoadIcon (this, "gtk-close", global::Gtk.IconSize.Menu);
			this.cancelBtn.Image = w1;
			this.MainTable.Add (this.cancelBtn);
			global::Gtk.Table.TableChild w2 = ((global::Gtk.Table.TableChild)(this.MainTable [this.cancelBtn]));
			w2.TopAttach = ((uint)(5));
			w2.BottomAttach = ((uint)(6));
			w2.XOptions = ((global::Gtk.AttachOptions)(4));
			w2.YOptions = ((global::Gtk.AttachOptions)(0));
			// Container child MainTable.Gtk.Table+TableChild
			this.drawStandShapeBtn = new global::Gtk.Button ();
			this.drawStandShapeBtn.CanFocus = true;
			this.drawStandShapeBtn.Name = "drawStandShapeBtn";
			this.drawStandShapeBtn.UseUnderline = true;
			this.drawStandShapeBtn.Label = global::Mono.Unix.Catalog.GetString ("Draw Stand Shape");
			this.MainTable.Add (this.drawStandShapeBtn);
			global::Gtk.Table.TableChild w3 = ((global::Gtk.Table.TableChild)(this.MainTable [this.drawStandShapeBtn]));
			w3.TopAttach = ((uint)(4));
			w3.BottomAttach = ((uint)(5));
			w3.LeftAttach = ((uint)(1));
			w3.RightAttach = ((uint)(2));
			w3.XOptions = ((global::Gtk.AttachOptions)(4));
			w3.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child MainTable.Gtk.Table+TableChild
			this.entryLabel = new global::Gtk.Label ();
			this.entryLabel.Name = "entryLabel";
			this.entryLabel.LabelProp = global::Mono.Unix.Catalog.GetString ("Name:");
			this.MainTable.Add (this.entryLabel);
			global::Gtk.Table.TableChild w4 = ((global::Gtk.Table.TableChild)(this.MainTable [this.entryLabel]));
			w4.XOptions = ((global::Gtk.AttachOptions)(4));
			w4.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child MainTable.Gtk.Table+TableChild
			this.heightEntry = new global::Gtk.Entry ();
			this.heightEntry.CanFocus = true;
			this.heightEntry.Name = "heightEntry";
			this.heightEntry.IsEditable = true;
			this.heightEntry.InvisibleChar = '●';
			this.MainTable.Add (this.heightEntry);
			global::Gtk.Table.TableChild w5 = ((global::Gtk.Table.TableChild)(this.MainTable [this.heightEntry]));
			w5.TopAttach = ((uint)(2));
			w5.BottomAttach = ((uint)(3));
			w5.LeftAttach = ((uint)(1));
			w5.RightAttach = ((uint)(2));
			w5.XOptions = ((global::Gtk.AttachOptions)(4));
			w5.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child MainTable.Gtk.Table+TableChild
			this.heightLabel = new global::Gtk.Label ();
			this.heightLabel.Name = "heightLabel";
			this.heightLabel.LabelProp = global::Mono.Unix.Catalog.GetString ("Height (px):");
			this.MainTable.Add (this.heightLabel);
			global::Gtk.Table.TableChild w6 = ((global::Gtk.Table.TableChild)(this.MainTable [this.heightLabel]));
			w6.TopAttach = ((uint)(2));
			w6.BottomAttach = ((uint)(3));
			w6.XOptions = ((global::Gtk.AttachOptions)(4));
			w6.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child MainTable.Gtk.Table+TableChild
			this.nameEntry = new global::Gtk.Entry ();
			this.nameEntry.CanFocus = true;
			this.nameEntry.Name = "nameEntry";
			this.nameEntry.IsEditable = true;
			this.nameEntry.InvisibleChar = '●';
			this.MainTable.Add (this.nameEntry);
			global::Gtk.Table.TableChild w7 = ((global::Gtk.Table.TableChild)(this.MainTable [this.nameEntry]));
			w7.LeftAttach = ((uint)(1));
			w7.RightAttach = ((uint)(2));
			w7.XOptions = ((global::Gtk.AttachOptions)(4));
			w7.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child MainTable.Gtk.Table+TableChild
			this.okButton = new global::Gtk.Button ();
			this.okButton.CanFocus = true;
			this.okButton.Name = "okButton";
			this.okButton.UseUnderline = true;
			this.okButton.Label = global::Mono.Unix.Catalog.GetString ("_OK");
			global::Gtk.Image w8 = new global::Gtk.Image ();
			w8.Pixbuf = global::Stetic.IconLoader.LoadIcon (this, "gtk-add", global::Gtk.IconSize.Menu);
			this.okButton.Image = w8;
			this.MainTable.Add (this.okButton);
			global::Gtk.Table.TableChild w9 = ((global::Gtk.Table.TableChild)(this.MainTable [this.okButton]));
			w9.TopAttach = ((uint)(5));
			w9.BottomAttach = ((uint)(6));
			w9.LeftAttach = ((uint)(1));
			w9.RightAttach = ((uint)(2));
			w9.XOptions = ((global::Gtk.AttachOptions)(4));
			w9.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child MainTable.Gtk.Table+TableChild
			this.standColorButton = new global::Gtk.ColorButton ();
			this.standColorButton.CanFocus = true;
			this.standColorButton.Events = ((global::Gdk.EventMask)(784));
			this.standColorButton.Name = "standColorButton";
			this.MainTable.Add (this.standColorButton);
			global::Gtk.Table.TableChild w10 = ((global::Gtk.Table.TableChild)(this.MainTable [this.standColorButton]));
			w10.TopAttach = ((uint)(3));
			w10.BottomAttach = ((uint)(4));
			w10.LeftAttach = ((uint)(1));
			w10.RightAttach = ((uint)(2));
			w10.XOptions = ((global::Gtk.AttachOptions)(4));
			w10.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child MainTable.Gtk.Table+TableChild
			this.widthEntry = new global::Gtk.Entry ();
			this.widthEntry.CanFocus = true;
			this.widthEntry.Name = "widthEntry";
			this.widthEntry.IsEditable = true;
			this.widthEntry.InvisibleChar = '●';
			this.MainTable.Add (this.widthEntry);
			global::Gtk.Table.TableChild w11 = ((global::Gtk.Table.TableChild)(this.MainTable [this.widthEntry]));
			w11.TopAttach = ((uint)(1));
			w11.BottomAttach = ((uint)(2));
			w11.LeftAttach = ((uint)(1));
			w11.RightAttach = ((uint)(2));
			w11.XOptions = ((global::Gtk.AttachOptions)(4));
			w11.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child MainTable.Gtk.Table+TableChild
			this.widthLabel = new global::Gtk.Label ();
			this.widthLabel.Name = "widthLabel";
			this.widthLabel.LabelProp = global::Mono.Unix.Catalog.GetString ("Width (px):");
			this.MainTable.Add (this.widthLabel);
			global::Gtk.Table.TableChild w12 = ((global::Gtk.Table.TableChild)(this.MainTable [this.widthLabel]));
			w12.TopAttach = ((uint)(1));
			w12.BottomAttach = ((uint)(2));
			w12.XOptions = ((global::Gtk.AttachOptions)(4));
			w12.YOptions = ((global::Gtk.AttachOptions)(4));
			this.Add (this.MainTable);
			if ((this.Child != null)) {
				this.Child.ShowAll ();
			}
			this.DefaultWidth = 500;
			this.DefaultHeight = 400;
			this.Show ();
			this.okButton.Clicked += new global::System.EventHandler (this.okButton_OnClick);
			this.drawStandShapeBtn.Clicked += new global::System.EventHandler (this.drawStandShapeBtn_OnClick);
			this.cancelBtn.Clicked += new global::System.EventHandler (this.cancelButton_OnClick);
		}
	}
}
